// <auto-generated />
using System;
using GestionFormation.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace GestionFormation.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("GestionFormation.Entity.Formateur", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Adress")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasColumnType("text");

                    b.Property<string>("Prenom")
                        .HasColumnType("text");

                    b.Property<string>("Tel")
                        .HasColumnType("text");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("formateurs");
                });

            modelBuilder.Entity("GestionFormation.Entity.Formation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Categorie")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Date_debut")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Date_fin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("FormateurId")
                        .HasColumnType("uuid");

                    b.Property<int>("Nombre_de_periode")
                        .HasColumnType("integer");

                    b.Property<string>("code")
                        .HasColumnType("text");

                    b.Property<string>("module")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FormateurId");

                    b.ToTable("formations");
                });

            modelBuilder.Entity("GestionFormation.Entity.Formation", b =>
                {
                    b.HasOne("GestionFormation.Entity.Formateur", "Formateur")
                        .WithMany("ListFormations")
                        .HasForeignKey("FormateurId");

                    b.Navigation("Formateur");
                });

            modelBuilder.Entity("GestionFormation.Entity.Formateur", b =>
                {
                    b.Navigation("ListFormations");
                });
#pragma warning restore 612, 618
        }
    }
}
